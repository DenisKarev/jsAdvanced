'use strict';
// Урок 1. Коллекции и итераторы. Модули
// Задание 2
// Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах.
// Клиенты приходят и делают заказы на разные блюда.
// Необходимо создать систему управления этими заказами, которая позволит:
//   • Отслеживать, какой повар готовит какое блюдо.
//   • Записывать, какие блюда заказал каждый клиент.
// Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента.
// В качестве ключей для клиентов используйте объекты.

// Повара и их специализации:
// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.

// Блюда и их повара:
// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.

// Заказы:
// Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
// Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк.

const chefs = new Map([
  ['Виктор', 'Пицца'],
  ['Ольга', 'Суши'],
  ['Дмитрий', 'Десерты'],
]);
const dishes = new Map([
  ['Пицца "Маргарита"', 'Виктор'],
  ['Пицца "Пепперони"', 'Виктор'],
  ['Суши "Филадельфия"', 'Ольга'],
  ['Суши "Калифорния"', 'Ольга'],
  ['Тирамису', 'Дмитрий'],
  ['Чизкейк', 'Дмитрий'],
]);

// const victorChef = { name: 'Виктор', spec: 'Пицца', dishes: new Set(['Пицца "Маргарита"', 'Пицца "Пепперони"']) };
// const olgaChef = { name: 'Ольга', spec: 'Суши', dishes: new Set(['Суши "Филадельфия"', 'Суши "Калифорния"']) };
// const dmotryChef = { name: 'Дмитрий', spec: 'Десерты', dishes: new Set(['Тирамису', 'Чизкейк']) };

const orders = new Map();
const alClient = { name: 'Александр' };
const mariaClient = { name: 'Мария' };
const irinaClient = { name: 'Ирина' };

orders.set(alClient, new Set(['Пицца "Пепперони"', 'Тирамису']));
orders.set(mariaClient, new Set(['Суши "Калифорния"', 'Пицца "Маргарита"']));
orders.set(irinaClient, new Set(['Чизкейк']));

orders.forEach((order, customer) => {
  console.log(`customer ${customer.name} has ordered: `);
  order.forEach((dish) => console.log(`\t${dish} \t\t -> (cooked by: ${dishes.get(dish)}: spec: ${chefs.get(dishes.get(dish))})`));
  console.log(`\tTotal: and some sum`);
});
